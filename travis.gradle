println "Travis CI mode enabled!"

ext.travis = true

// release func
ext.doSubmit = { url, x ->
    URL siteUrl = new URL(url);
    HttpURLConnection conn = (HttpURLConnection) siteUrl.openConnection();
    conn.setRequestMethod("POST");
    conn.setDoOutput(true);
    conn.setDoInput(true);

    DataOutputStream out = new DataOutputStream(conn.getOutputStream());

    Set keys = x.keySet();
    Iterator keyIter = keys.iterator();
    String content = "";
    for(int i=0; keyIter.hasNext(); i++) {
        Object key = keyIter.next();
        if(i!=0) {
            content += "&";
        }
        content += key + "=" + URLEncoder.encode(x.get(key), "UTF-8");
    }
    System.out.println(content);
    out.writeBytes(content);
    out.flush();
    out.close();
    BufferedReader inx = new BufferedReader(new InputStreamReader(conn.getInputStream()));
    String line = "";
    while((line=inx.readLine())!=null) {
        System.out.println(line);
    }
    inx.close();
}

task travisRelease(dependsOn: ['_zipassets']) << {

    def commit_sha = ""

    def prestd = new ByteArrayOutputStream()

    // fetch commit sha for name
    exec {
        commandLine 'git', 'log', '-n', '1', '--pretty=format:"%H"'

        standardOutput = prestd
    }

    commit_sha = prestd.toString().replace('"', '')

    exec {
        executable 'curl'

        def FTP_USER = _property("FTP_USER")
        def FTP_PASSWORD = _property("FTP_PASSWORD")

        def file = project.file("$project.assetArchiveDestDir/$project.aName")

        args '--ftp-create-dirs', '-T', "$file", '-u', "$FTP_USER:$FTP_PASSWORD", 'ftp://475.076.myftpupload.com/non-wp/uploads/travis-ci/commital/SCT/' + "SCT-$commit_sha-all.zip"
    }
    
    Map<String, String> data = new HashMap<String, String>();
    data.put("r|e|p|o", "sample-command-tokenizer");
    data.put("r|e|p|odir", "SCT");
    data.put("o|w|n|er", "kenzierocks");
    doSubmit("http://techshroom.com/non-wp/uploads/manager/commit.php", data);
}

travisRelease.onlyIf { _hasProperty("TRAVIS_SECURE_ENV_VARS") && _property("TRAVIS_SECURE_ENV_VARS").toBoolean() }
